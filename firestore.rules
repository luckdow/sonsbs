rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ===================  GÜVENLI FIREBASE RULES ===================
    // Google Search Console bot hatalarını önlemek için optimize edildi
    
    // =================== PUBLIC READ ACCESS ===================
    // SEO ve crawler'lar için güvenli public read access
    
    // Genel public read access - bot'lar için güvenli
    match /{document=**} {
      // Sadece GET istekleri için public read (bot crawling için)
      allow read: if request.method == 'get';
    }
    
    // =================== GERÇEK KOLEKSİYONLAR ===================
    
    // Users collection - kullanıcılar (admin, driver, customer)
    match /users/{userId} {
      // Kullanıcı kendi profilini okuyabilir/güncelleyebilir
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Adminler tüm kullanıcıları görebilir ve yönetebilir
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Şoförler kendi bilgilerini güncelleyebilir
      allow update: if request.auth != null && 
        request.auth.uid == userId &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'driver';
      
      // Authenticated kullanıcılar driver role'lü kullanıcıları okuyabilir
      allow read: if request.auth != null && resource.data.role == 'driver';
    }
    
    // Reservations collection - rezervasyonlar
    match /reservations/{reservationId} {
      // SEO FIX: Public read access for general reservation stats - bot'lar için
      allow read: if resource.data.keys().hasAny(['status', 'direction', 'vehicleType', 'createdAt']);
      
      // Herkes rezervasyon oluşturabilir (misafir kullanıcılar için)
      allow create: if true;
      
      // Kullanıcı kendi rezervasyonlarını görebilir
      allow read: if request.auth != null && 
        (resource.data.customerId == request.auth.uid || 
         resource.data.driverId == request.auth.uid ||
         resource.data.customerInfo.email == request.auth.token.email ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      
      // GEÇİCİ: Authenticated kullanıcılar tüm rezervasyonları okuyabilir (Dashboard için)
      allow read: if request.auth != null;
      
      // Admin ve atanmış şoför rezervasyonu güncelleyebilir
      allow update: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin' ||
         resource.data.driverId == request.auth.uid);
      
      // Sadece admin silebilir
      allow delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Vehicles collection - araçlar (herkes görür, admin yönetir)
    match /vehicles/{vehicleId} {
      // SEO FIX: Zaten public ✅
      allow read: if true; // Public vehicle bilgileri
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Drivers collection - eski şoför sistemi (artık kullanılmıyor ama veri var)
    match /drivers/{driverId} {
      // Admin tüm eski şoförleri görebilir ve yönetebilir
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // GEÇİCİ: Authenticated kullanıcılar eski şoförleri okuyabilir
      allow read: if request.auth != null;
    }
    
    // Manual Drivers collection - manuel şoförler
    match /manual_drivers/{driverId} {
      // Admin tüm manuel şoförleri görebilir ve yönetebilir
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // GEÇİCİ: Authenticated kullanıcılar manuel şoförleri okuyabilir
      allow read: if request.auth != null;
    }
    
    // Settings collection - sistem ayarları
    match /settings/{settingId} {
      // Ödeme yöntemleri ve banka bilgileri herkese açık
      allow read: if true; 
      // Sadece admin yazabilir
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Financial Transactions collection - finansal işlemler
    match /financial_transactions/{transactionId} {
      // Sadece admin tüm finansal işlemleri görebilir
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Şoför kendi finansal işlemlerini görebilir
      allow read: if request.auth != null && 
        resource.data.driverId == request.auth.uid;
      
      // GEÇİCİ: Authenticated kullanıcılar finansal işlemleri okuyabilir (Dashboard için)
      allow read: if request.auth != null;
      
      // Sadece admin finansal işlem oluşturabilir/güncelleyebilir
      allow create, update: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Sadece admin silebilir
      allow delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Payment Reminders collection - ödeme hatırlatıcıları
    match /paymentReminders/{reminderId} {
      // Sadece admin görebilir ve yönetebilir
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Şoför kendi hatırlatıcılarını görebilir
      allow read: if request.auth != null && 
        resource.data.driverId == request.auth.uid;
    }
    
    // Counters collection - rezervasyon numarası sayaçları
    match /counters/{counterId} {
      // Counter işlemleri için gerekli (rezervasyon numarası)
      allow read, write: if true;
    }
    
    // Extra Services collection - ek hizmetler
    match /extraServices/{serviceId} {
      allow read: if true; // Public extra services
      
      // Admin yazabilir
      allow write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // GEÇİCİ: Authenticated kullanıcılar okuyabilir (AdminLayout için)
      allow read: if request.auth != null;
    }
    
    // Company Financials collection - şirket finansalları
    match /company_financials/{financialId} {
      // Sadece admin şirket finansallarını görebilir ve yönetebilir
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Company Accounts collection - şirket hesapları
    match /company_accounts/{accountId} {
      // Sadece admin şirket hesaplarını görebilir ve yönetebilir
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // FCM Tokens collection - push notification tokenları
    match /fcmTokens/{userId} {
      // Kullanıcı kendi FCM token'ını yönetebilir
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Admin tüm token'ları görebilir
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Customers collection - müşteriler
    match /customers/{customerId} {
      // Admin tüm müşterileri görebilir ve yönetebilir
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      
      // Müşteri kendi profilini görebilir
      allow read: if request.auth != null && request.auth.uid == customerId;
      
      // GEÇİCİ: Authenticated kullanıcılar müşterileri okuyabilir (Dashboard için)
      allow read: if request.auth != null;
    }
    
    // =================== EK YARDIMCI KOLEKSİYONLAR ===================
    
    // Notifications collection - bildirimler (eğer gelecekte eklenirse)
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      
      // Admin tüm bildirimleri görebilir
      allow read: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Analytics ve logs - sadece admin
    match /analytics/{analyticsId} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    match /logs/{logId} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Error logs - sistem hataları
    match /errorLogs/{errorId} {
      allow read, write: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // =================== GÜVENLİK & SEO ===================
    
    // 🔍 SEO ÇÖZÜMÜ: Google Search Console bot'ları için
    // Public koleksiyonlara tam okuma erişimi
    match /{collection}/{document} {
      // Halka açık koleksiyonlar - Googlebot okuyabilir
      allow read: if collection in [
        'vehicles',           // Araç bilgileri
        'settings',          // Ödeme yöntemleri, genel ayarlar  
        'extraServices',     // Ek hizmetler
        'counters'           // Genel sayaçlar
      ];
    }
    
    // Public SEO data koleksiyonu (eğer gelecekte eklenirse)
    match /public_seo/{document} {
      allow read: if true; // SEO verileri herkesin okuması için
    }
    
    // Default deny - GÜVENLİK İÇİN ÇOK ÖNEMLİ!
    // Yukarıda tanımlanmayan koleksiyonlara yazma kesinlikle yasak
    match /{document=**} {
      allow write: if false; // Yazma kesinlikle yasak
    }
  }
}
