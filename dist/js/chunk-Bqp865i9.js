const r=(r,e,o=!1)=>{if(!e||!e.pricing||!e.pricing.ranges)return{totalPrice:i((e?.kmRate||25)*r*(o?2:1)),breakdown:{basePrice:0,additionalKmPrice:i((e?.kmRate||25)*r),distance:r,pricePerKm:e?.kmRate||25},isRoundTrip:o,currency:"€"};const t=r*(o?2:1);let s=0,a={ranges:[],distance:t,isRoundTrip:o,currency:"€"},n=t,c=0;const m=[...e.pricing.ranges].sort((r,i)=>r.from-i.from);for(let d=0;d<m.length;d++){const r=m[d],e=r.from,o=r.to;if(n>0&&t>e){const m=Math.min(n,Math.min(o-Math.max(c,e),t-Math.max(c,e)));if(m>0){let t=0;t=r.isFixed?r.price:m*r.price,a.ranges.push({label:`${e}-${o}km${r.isFixed?" (Sabit)":""}`,from:e,to:o,distance:m,rate:r.price,isFixed:r.isFixed,total:i(t),type:`range_${d}`}),s+=t,n-=m,c+=m}}}return{totalPrice:i(s),breakdown:a,isRoundTrip:o,currency:"€"}},i=r=>{const i=r-Math.floor(r);return i>=.51?Math.ceil(r):i<=.49?Math.floor(r):Math.round(r)},e={sedan:{ranges:[{from:1,to:20,price:25,isFixed:!0},{from:20,to:40,price:1.5,isFixed:!1},{from:40,to:80,price:1,isFixed:!1},{from:80,to:150,price:.8,isFixed:!1}]},suv:{ranges:[{from:1,to:20,price:30,isFixed:!0},{from:20,to:40,price:2,isFixed:!1},{from:40,to:80,price:1.3,isFixed:!1},{from:80,to:150,price:1,isFixed:!1}]},minivan:{ranges:[{from:1,to:20,price:28,isFixed:!0},{from:20,to:40,price:1.7,isFixed:!1},{from:40,to:80,price:1.1,isFixed:!1},{from:80,to:150,price:.9,isFixed:!1}]},luxury:{ranges:[{from:1,to:20,price:40,isFixed:!0},{from:20,to:40,price:2.5,isFixed:!1},{from:40,to:80,price:2,isFixed:!1},{from:80,to:150,price:1.5,isFixed:!1}]},bus:{ranges:[{from:1,to:20,price:35,isFixed:!0},{from:20,to:40,price:2,isFixed:!1},{from:40,to:80,price:1.5,isFixed:!1},{from:80,to:150,price:1.2,isFixed:!1}]}},o=r=>e[r]||e.sedan,t=r=>{const i=[];if(!r.ranges||!Array.isArray(r.ranges)||0===r.ranges.length)return i.push("En az bir mesafe aralığı gerekli"),{isValid:!1,errors:i};const e=[...r.ranges].sort((r,i)=>r.from-i.from);for(let o=0;o<e.length;o++){const r=e[o];r.from>=r.to&&i.push(`Aralık ${o+1}: 'From' değeri 'To' değerinden küçük olmalı`),r.price<=0&&i.push(`Aralık ${o+1}: Fiyat 0'dan büyük olmalı`),o>0&&r.from>e[o-1].to&&i.push(`Aralık ${o+1}: ${e[o-1].to}km ile ${r.from}km arası tanımsız`)}return{isValid:0===i.length,errors:i}};export{r as c,o as g,t as v};
