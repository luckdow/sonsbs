import{m as e,n as t}from"./chunk-SPeBi8oJ.js";import{d as r}from"./index-B4sOzZkQ.js";class a{constructor(e=0,t="Network Error"){this.status=e,this.text=t}}const i={origin:"https://api.emailjs.com",blockHeadless:!1,storageProvider:(()=>{if("undefined"!=typeof localStorage)return{get:e=>Promise.resolve(localStorage.getItem(e)),set:(e,t)=>Promise.resolve(localStorage.setItem(e,t)),remove:e=>Promise.resolve(localStorage.removeItem(e))}})()},o=e=>e?"string"==typeof e?{publicKey:e}:"[object Object]"===e.toString()?e:{}:{},s=async(e,t,r={})=>{const o=await fetch(i.origin+e,{method:"POST",headers:r,body:t}),s=await o.text(),n=new a(o.status,s);if(o.ok)return n;throw n},n=(e,t,r)=>{if(!e||"string"!=typeof e)throw"The public key is required. Visit https://dashboard.emailjs.com/admin/account";if(!t||"string"!=typeof t)throw"The service ID is required. Visit https://dashboard.emailjs.com/admin";if(!r||"string"!=typeof r)throw"The template ID is required. Visit https://dashboard.emailjs.com/admin/templates"},c=e=>e.webdriver||!e.languages||0===e.languages.length,m=()=>new a(451,"Unavailable For Headless Browser"),l=(e,t)=>{if((e=>!e.list?.length||!e.watchVariable)(e))return!1;((e,t)=>{if(!Array.isArray(e))throw"The BlockList list has to be an array";if("string"!=typeof t)throw"The BlockList watchVariable has to be a string"})(e.list,e.watchVariable);const r=(a=t,i=e.watchVariable,a instanceof FormData?a.get(i):a[i]);var a,i;return"string"==typeof r&&e.list.includes(r)},p=()=>new a(403,"Forbidden"),d=async(e,t,r)=>{if(!t.throttle||!r)return!1;((e,t)=>{if("number"!=typeof e||e<0)throw"The LimitRate throttle has to be a positive number";if(t&&"string"!=typeof t)throw"The LimitRate ID has to be a non-empty string"})(t.throttle,t.id);const a=t.id||e,i=await(async(e,t,r)=>{const a=Number(await r.get(e)||0);return t-Date.now()+a})(a,t.throttle,r);return i>0||(await r.set(a,Date.now().toString()),!1)},u=()=>new a(429,"Too Many Requests"),h=(e,t="https://api.emailjs.com")=>{if(!e)return;const r=o(e);i.publicKey=r.publicKey,i.blockHeadless=r.blockHeadless,i.storageProvider=r.storageProvider,i.blockList=r.blockList,i.limitRate=r.limitRate,i.origin=r.origin||t},y=async(e,t,r,a)=>{const h=o(a),y=h.publicKey||i.publicKey,f=h.blockHeadless||i.blockHeadless,b=h.storageProvider||i.storageProvider,g={...i.blockList,...h.blockList},w={...i.limitRate,...h.limitRate};if(f&&c(navigator))return Promise.reject(m());if(n(y,e,t),(e=>{if(e&&"[object Object]"!==e.toString())throw"The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/"})(r),r&&l(g,r))return Promise.reject(p());if(await d(location.pathname,w,b))return Promise.reject(u());const v={lib_version:"4.4.1",user_id:y,service_id:e,template_id:t,template_params:r};return s("/api/v1.0/email/send",JSON.stringify(v),{"Content-type":"application/json"})},f=async a=>{try{const i=await e(t(r,"settings","main"));if(!i.exists())throw new Error("EmailJS ayarları bulunamadı");const o=i.data().emailSettings;if(!o?.emailjsServiceId||!o?.emailjsTemplateId||!o?.emailjsPublicKey)throw new Error("EmailJS ayarları eksik");h(o.emailjsPublicKey);a.customerName,a.customerEmail,a.reservationId,a.customerName,a.customerPhone,a.pickupLocation,a.dropoffLocation,a.tripDate,a.tripTime,a.passengerCount,a.totalPrice,"cash"===a.paymentMethod||("credit_card"===a.paymentMethod||("bank_transfer"===a.paymentMethod||a.paymentMethod)),a.tripType,a.qrCodeUrl,a.tempPassword;return{success:!0,response:await y(o.emailjsServiceId,o.emailjsTemplateId,{to_email:a.customerEmail,to_name:a.customerName,from_name:"Gate Transfer",reply_to:"sbstravel@gmail.com",subject:`Rezervasyon Onayı - ${a.reservationId}`,message:`Rezervasyon Onayı\n\nSayın ${a.customerName},\n\nRezervasyon Numaranız: ${a.reservationId}\nKalkış: ${a.pickupLocation}\nVarış: ${a.dropoffLocation}\nTarih: ${a.tripDate} ${a.tripTime}\nYolcu: ${a.passengerCount} kişi\nFiyat: €${a.totalPrice}\n\n${a.tempPassword?`🔐 Geçici Şifreniz: ${a.tempPassword}`:""}\n\nTeşekkürler,\nGate Transfer Ekibi`,reservationId:a.reservationId,customerName:a.customerName,pickupLocation:a.pickupLocation,dropoffLocation:a.dropoffLocation,tripDate:a.tripDate,tripTime:a.tripTime,passengerCount:a.passengerCount,totalPrice:a.totalPrice,customerPhone:a.customerPhone||"",tempPassword:a.tempPassword||"",paymentMethod:a.paymentMethod,tripType:a.tripType,qrCodeUrl:a.qrCodeUrl||""},{publicKey:o.emailjsPublicKey})}}catch(i){throw i}},b=async e=>{try{const t={to_name:e.customerName,to_email:e.customerEmail,from_name:"Gate Transfer",reservationId:e.reservationId,customerName:e.customerName,driverName:e.driverName,driverPhone:e.driverPhone,vehiclePlate:e.vehiclePlate||"",pickupLocation:e.pickupLocation,dropoffLocation:e.dropoffLocation,tripDate:e.tripDate,tripTime:e.tripTime};return await y(SERVICE_ID,"template_driver_assign",t,PUBLIC_KEY)}catch(t){throw t}};export{b as a,f as s};
